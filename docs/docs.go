// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "shulganew@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "set URL in body POST",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Set origin URL",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User unauthorized"
                    },
                    "404": {
                        "description": "Conflict. URL existed."
                    },
                    "500": {
                        "description": "Handling error"
                    }
                }
            }
        },
        "/api/shorten": {
            "post": {
                "description": "Add origin URL by JSON request, get brief URL in response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "API add URL in JSON",
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "User unauthorized"
                    },
                    "500": {
                        "description": "Handling error"
                    }
                }
            }
        },
        "/api/shorten/batch": {
            "post": {
                "description": "Set json URLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Set several user's URLs in body in JSON format",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_shulganew_shear_git_internal_entities.BatchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error JSON Unmarshal"
                    },
                    "401": {
                        "description": "User unauthorized"
                    },
                    "404": {
                        "description": "Conflict. URL existed."
                    },
                    "500": {
                        "description": "Handling error"
                    }
                }
            },
            "delete": {
                "description": "Delete array from request body of user's URLs in database, async",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Delete user's URLs",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "User unauthorized"
                    },
                    "500": {
                        "description": "Handling error"
                    }
                }
            }
        },
        "/api/user/urls": {
            "get": {
                "description": "Add origin URL by JSON request, get brief URL in response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get all user's origin URLs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_web_handlers.ResponseAuth"
                            }
                        }
                    },
                    "401": {
                        "description": "User unauthorized"
                    },
                    "500": {
                        "description": "Handling error"
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Ping service for database connection check",
                "tags": [
                    "api"
                ],
                "summary": "Test database",
                "responses": {
                    "200": {
                        "description": "Available"
                    },
                    "500": {
                        "description": "Handling error"
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "get short by id",
                "tags": [
                    "api"
                ],
                "summary": "Get origin URL by brief (short) URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brief URL",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Temporary Redirect"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "410": {
                        "description": "Gone"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_shulganew_shear_git_internal_entities.BatchResponse": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        },
        "internal_web_handlers.ResponseAuth": {
            "type": "object",
            "properties": {
                "original_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Shortener API",
	Description:      "Shortener service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
